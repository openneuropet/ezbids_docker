name: Test Local Upload

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_run:
    workflows: ["Docker Build (Local)"]
    types:
      - completed
  workflow_dispatch:  # Allow manual triggering

jobs:
  Test-Local-Uploads:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    env:
      COMPOSE_FILE: ./docker-compose.yml
      REGISTRY_PREFIX: docker.io/library
      SERVER_NAME: localhost

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Ensure we get the submodule info

      - name: Set repository name
        run: echo "REPO_NAME=$(basename $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Cache test data
        uses: actions/cache@v4
        id: test-data-cache
        with:
          path: test/test_data
          key: test-data-${{ hashFiles('.gitmodules') }}
          restore-keys: |
            test-data-

      - name: Get test data if not cached
        if: steps.test-data-cache.outputs.cache-hit != 'true'
        run: |
          make get-test-data

      - name: Cache Docker images
        uses: actions/cache@v4
        id: docker-cache
        with:
          path: |
            mongo.tar
            api.tar
            handler.tar
            ui.tar
          key: docker-local-images-${{ github.event.workflow_run.head_sha || github.sha }}
          restore-keys: |
            docker-local-images-

      - name: Setup environment
        run: |
          # copy the example.env to .env
          cp example.env .env

          # Update .env to use the hostname
          sed -i "s/SERVER_NAME=.*/SERVER_NAME=localhost/" .env

      - name: Build or load images
        run: |
          if [ -f mongo.tar ] && [ -f api.tar ] && [ -f handler.tar ] && [ -f ui.tar ]; then
            echo "Loading cached images..."
            if ! docker load < mongo.tar || ! docker load < api.tar || ! docker load < handler.tar || ! docker load < ui.tar; then
              echo "Failed to load cached images, building instead..."
              docker compose -f ${{ env.COMPOSE_FILE }} build
            else
              rm mongo.tar api.tar handler.tar ui.tar
            fi
          else
            echo "Building images..."
            docker compose -f ${{ env.COMPOSE_FILE }} build
          fi
          

      - name: Start services
        run: |
          # Create and set permissions for temp directory
          mkdir -p /tmp/ezbids-workdir
          chmod 770 /tmp/ezbids-workdir
          
          # Start services using our tagged images
          docker compose -f ${{ env.COMPOSE_FILE }} up -d
          sleep 30

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Verify uv installation
        run: uv --version

      - name: Run upload test
        run: |
          make test-upload

      - name: Push Images
        if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || github.event_name == 'workflow_dispatch'
        run: |
          docker login ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}
          make docker-local-push